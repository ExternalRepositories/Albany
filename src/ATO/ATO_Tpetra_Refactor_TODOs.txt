
This file lists the work that is still needed to finish 
refactoring ATO to work with Tpetra/Thyra instead of 
Epetra/EpetraExt, in no particular order (dependencies 
b/w action items are noted).  

1. Debug Tpetra function ReplaceDiagonalValues,
currently in Albany::Utils (should ultimately be moved to the 
Tpetra::CrsMatrix class). This function is used in the 
ATOT::XFEM_Preconditioner.cpp class. 

2. Have Mark Hoemmen fix Tpetra::CrsMatrix::apply method with a 
TRANS combine mode.  Once this is done, remove creation of 
filterOperatorTpetra in ATO::Solver and ATOT::Solver, and
uncomment relevant apply code in copyObjectiveFromStateMgr 
routines.

3. Switch distributed parameters in Albany to use Tpetra instead 
of Epetra.  This requires replacing workset.overlapped_dgdp and 
workset.dgdp with Tpetra versions and changing calls in 
ATO::TensorPNormResponse and ATO::HomogenizedConstantsResponse 
to use these new objects.

4. Test/debug new ATOT::Solver by running tests with AlbanyT 
executable.  

Currently, the following tests seg fault when run:

- Constraint_2D_adj 
- Constraint_2D_fd
- DistParam_2D

error in debug: 


p=0: *** Caught standard std::exception of type 'std::logic_error' :

 /home/ikalash/LCM/Trilinos/build-debug-no-dtk-ikt/install/include/Thyra_ModelEvaluatorBase_def.hpp:2102:
 
 Throw number = 1
 
 Throw test that evaluated to true: !deriv.isSupportedBy(derivSupport)
 
 Thyra::ModelEvaluatorBase::OutArgs<Scalar>::assert_supports(OUT_ARG_DgDp,j,l):
 
 model = 'Piro::NOXSolver<double>':
 
 Error, The argument DgDp(0,0) = Derivative{derivMultiVec=DerivativeMultiVector{multiVec=Thyra::TpetraMultiVector<double, int, int, Kokkos::Compat::KokkosDeviceWrapperNode<Kokkos::Serial, Kokkos::HostSpace> >{rangeDim=651,domainDim=1},orientation=DERIV_MV_BY_COL}}
 is not supported!
 
 The supported types include DerivativeSupport{DERIV_LINEAR_OP}!


The following tests fail when run with AlbanyT: 

- 2Matl_Homog 
- RegHeaviside_3D 

Note that NLOpt was not on in my build; need to build
with NLOpt and test NLOpt tests as well.  These tests are:

- BodyForce_2D 
- CurrentOpt 
- ResidualStrain 
- VolumeObj_StiffnessCon
- VolumeObj_StressCon

Note also that Cogent was not on in my build; need to build with Cogent
and test Cogent tests.  These tests are:
 
- Cogent_Opt
- Cogent_Tab


5. Once 4. is done, finish creating tests that run with AlbanyT executable.  

