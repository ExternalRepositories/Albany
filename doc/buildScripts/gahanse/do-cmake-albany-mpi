#!/bin/sh
#
# Here is a script for configuring Glen's working version of Albany
# 
# Note: This heavily borrows ideas from Kevin Long's Trilinos configure script

# Parse for command line arguments
TEMP=`getopt -o x --long help,acis,parasolid,lcm,hyd,scorec,dryrun,verbose,fpe,lameinc:,lamelib:,trilinos: -- "$@"`

eval set -- "$TEMP"

while true ; do
    case "$1" in 
      --dryrun) ECHO=echo; shift;;
      --hyd) ALB_ENABLE_HYDRIDE=ON; shift ;;
      --lameinc)
             ALB_LAME_INC_DIR="$2"; shift 2;;
      --lamelib)
             ALB_LAME_LIB_DIR="$2"; shift 2;;
      --lcm) ALB_ENABLE_LCM=ON; shift ;;
      --scorec) ALB_ENABLE_SCOREC=ON; shift ;;
      --acis) ALB_ENABLE_ACIS=ON; shift ;;
      --parasolid) ALB_ENABLE_PARASOLID=ON; shift ;;
      --ascr) ALB_ENABLE_ASCR=ON; shift ;;
      --felix) ALB_ENABLE_FELIX=ON; shift ;;
      --verbose) ALB_VERBOSE=ON; shift;;
      --fpe) ALB_CHECK_FPE=ON; shift;;
      --trilinos)
            TRILINOS_INSTALL_DIR="$2"; shift 2;;
      --help)
            echo "Command-line arguments:"
            echo "--help             help"
            echo "--dryrun           print the command that would be used"
            echo "--verbose          enable verbose configuration (default: off)"
            echo "--lameinc  <dir>   set location of LAME include files (no default)"
            echo "--lamelib  <dir>   set location of LAME library files (no default)"
            echo "--lcm              enable LCM capabilities (default: off)"
            echo "--hyd              enable Hydride capabilities (default: off)"
            echo "--scorec           enable RPI SCOREC adaptation (default: off)"
            echo "--acis             enable SCOREC ACIS library (default: off)"
            echo "--parasolid        enable SCOREC PARASOLID library (default: off)"
            echo "--ascr             enable ASCR capabilities (default: off)"
            echo "--felix            enable Land Ice SciDAC project code (default: off)"
            echo "--fpe              enable traps for floating point exceptions (default: off)"
            echo "--trilinos <dir>   set location of Trilinos library (no default)"
            echo " ";
            exit 0;
            shift
            ;;
      --) shift; break;;
   esac
done

if [ -z "$TRILINOS_INSTALL_DIR" ]; then
    echo -e "\nNeed to set environment variable TRILINOS_INSTALL_DIR or use --trilinos <dir> option"
    exit 1
fi

# LAME
if [ -z "$ALB_LAME_INC_DIR" -o  -z "$ALB_LAME_LIB_DIR" ]; then
  echo -e "\nLAME capabilities are NOT configured. If this is incorrect:"
  echo "Need to set environment variables ALB_LAME_* or use --lameinc <dir> and --lamelib <dir> options"
  ALB_ENABLE_LAME=OFF
else
  ALB_ENABLE_LAME=ON
fi

if [ -z "$ALB_ENABLE_HYDRIDE" -o "$ALB_ENABLE_HYDRIDE" = "OFF" ]; then
    echo -e "\nHydride capabilities are NOT configured. If this is incorrect, use option --hyd"
    ALB_ENABLE_HYDRIDE=OFF
fi

if [ -z "$ALB_ENABLE_LCM" -o "$ALB_ENABLE_LCM" = "OFF" ]; then
    echo -e "\nLCM capabilities are NOT configured. If this is incorrect, use option --lcm"
    ALB_ENABLE_LCM=OFF
fi

if [ -z "$ALB_ENABLE_FELIX" -o "$ALB_ENABLE_FELIX" = "OFF" ]; then
    echo -e "\nFELIX capabilities are NOT configured. If this is incorrect, use option --felix"
    ALB_ENABLE_FELIX=OFF
fi

if [ -z "$ALB_ENABLE_ASCR" -o "$ALB_ENABLE_ASCR" = "OFF" ]; then
    echo -e "\nASCR capabilities are NOT configured. If this is incorrect, use option --ascr"
    ALB_ENABLE_ASCR=OFF
fi

if [ -z "$ALB_ENABLE_ACIS" -o "$ALB_ENABLE_ACIS" = "OFF" ]; then
    echo -e "\nACIS capabilities are NOT configured. If this is incorrect, use option --acis"
    ALB_ENABLE_ACIS=OFF
fi

if [ -z "$ALB_ENABLE_PARASOLID" -o "$ALB_ENABLE_PARASOLID" = "OFF" ]; then
    echo -e "\nPARASOLID capabilities are NOT configured. If this is incorrect, use option --acis"
    ALB_ENABLE_PARASOLID=OFF
fi

if [ -z "$ALB_ENABLE_SCOREC" -o "$ALB_ENABLE_SCOREC" = "OFF" ]; then
    echo -e "\nSCOREC capabilities are NOT configured. If this is incorrect, use option --scorec"
    ALB_ENABLE_SCOREC=OFF
else
    if [ -z "$GMI_INSTALL_DIR" ]; then
        echo -e "\nNeed to set environment variable GMI_INSTALL_DIR"
        exit 1
    fi
    if [ -z "$FMDB_INSTALL_DIR" ]; then
        echo -e "\nNeed to set environment variable FMDB_INSTALL_DIR"
        exit 1
    fi
    if [ -z "$MESHADAPT_INSTALL_DIR" ]; then
        echo -e "\nNeed to set environment variable MESHADAPT_INSTALL_DIR"
        exit 1
    fi
    ALB_ENABLE_SCOREC=ON
    GMIINCDIR=$GMI_INSTALL_DIR/include
    GMILIBDIR=$GMI_INSTALL_DIR/lib
    FMDBINCDIR=$FMDB_INSTALL_DIR/include
    FMDBLIBDIR=$FMDB_INSTALL_DIR/lib
    MESHADAPTINCDIR=$MESHADAPT_INSTALL_DIR/include
    MESHADAPTLIBDIR=$MESHADAPT_INSTALL_DIR/lib
    PARMETISLIBDIR=$PARMETISDIR
fi

if [ -z "$ALB_VERBOSE" -o "$ALB_VERBOSE" = "OFF" ]; then
    ALB_VERBOSE=OFF
fi

if [ -z "$ALB_CHECK_FPE" -o "$ALB_CHECK_FPE" = "OFF" ]; then
    ALB_CHECK_FPE=OFF
fi

echo -e "\n"

${ECHO} cmake \
      -D ALBANY_TRILINOS_DIR:FILEPATH="$TRILINOS_INSTALL_DIR" \
      -D ENABLE_LCM:BOOL=${ALB_ENABLE_LCM} \
      -D ENABLE_LAME:BOOL=${ALB_ENABLE_LAME} \
      -D CMAKE_VERBOSE_MAKEFILE:BOOL=${ALB_VERBOSE} \
      -D ENABLE_CHECK_FPE:BOOL=${ALB_CHECK_FPE} \
      -D ENABLE_HYDRIDE:BOOL=${ALB_ENABLE_HYDRIDE} \
      -D ENABLE_SCOREC:BOOL=${ALB_ENABLE_SCOREC} \
      -D ENABLE_ACIS:BOOL=${ALB_ENABLE_ACIS} \
      -D ENABLE_PARASOLID:BOOL=${ALB_ENABLE_PARASOLID} \
      -D ENABLE_FELIX:BOOL=${ALB_ENABLE_FELIX} \
      -D ENABLE_ASCR:BOOL=${ALB_ENABLE_ASCR} \
      -D LAME_INCLUDE_DIR:FILEPATH="$ALB_LAME_INC_DIR" \
      -D LAME_LIBRARY_DIR:FILEPATH="$ALB_LAME_LIB_DIR" \
      -D FMDB_INCLUDE_DIR:FILEPATH="$FMDBINCDIR;$GMIINCDIR;$MESHADAPTINCDIR" \
      -D FMDB_LIBRARY_DIR:FILEPATH="$FMDBLIBDIR;$GMILIBDIR;$MESHADAPTLIBDIR;$PARMETISLIBDIR" \
       ../

#-D CMAKE_EXE_LINKER_FLAGS:STRING="-no-ip" \
