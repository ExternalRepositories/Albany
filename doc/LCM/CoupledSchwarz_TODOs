
-----------------------Cleanup TODOs---------------------------

4.) Change variable/function names to comply with C++ coding standards
[Alejandro] Mostly done in SchwarzMultiscale.*.

6.) Eventually we'll want to put an ifdef to suppress all the debug
output [TBD].

7.) Printing of param vec for ThyraProductVector in Main_SolveT.cpp [Irina].

8.) Put logic to copy Response parameter list from "master" to individual model 
ones, similar to what is done for "Parameters" [Irina]. 

9.) Fix up sacado_param_vec in SchwarzMultiscale.cpp (does it need to be Teuchos::Array?).

---------------------Debug TODOs------------------------

2.) Get responses working for > 1 model. [Irina]

3.) Fix memory leak issues that show up after solve.

6.) Issue when there is no "Parameters" or "Responses" section in input file [Irina].

---------------------Development TODOs------------------------

1.) We may want to put in validatian of parameter lists in
LCM::SchwarzMultiscale class, if necessary.  It appears to be handled
in general already in other parts of the code. [TBD?]

2.) Implement Schwarz_BoundaryJacobian class to create / apply boundary 
Jacobians as Tpetra_Operators.  Resulting Teuchos Array of Tpetra_Operators
will be passed to Schwarz_CoupledJacobian class. [Alejandro]

3.) Sensitivities [how to define DfDp, DgDp, DgDx, etc. when 
we have Thyra Product Vectors?  Is this supported?]

4.) Implement observer [Irina].

------------------Questions/Comments/Notes-----------------------------

1.) initial_guess, passed to the LCM::CoupledSchwarz constructor, is
used to create the Albany_Application object for each model.  There,
it's used to set the initial condition (AAdapt:InitialContitionsT).
It's used to set x_init and x_dot_init, part of nominal_values
(get_x_init and get_x_dot_init for the EpetraExt Model Evaluator).

2.) How will we handle multi-proc runs? [Ray has asked]

----------------Development Planning TODOs----------------------------------------


2.) Understand how the output will be done.  In
QCAD::CoupledPoissonSchrodinger, a discretization object is created
just for producing the collected output.  Need to understand how this
works and how to extend it to our case.  A related question is whether
we need to create an observer.  We would need a routine that breaks up
the final concatenated solutions into separate ones and gives these to
the mesh output routines (like separateCombinedVector in QCAD?).

3.) Figure out how we'll hook in Teko for the preconditioner.

4.) Figure out if Thyra can be used for efficient matrix/vector
multiplies and getting submatrices/vectors for coupled model.  Is
Tpetra_Operator Jacobian class OK, or should this be Thyra?

-----------------Notes from emails with Andy/Eric Cyr---------------------------------------

1.) The CouplePS_NOXObserver takes a single vector for the fully
coupled problem and breaks it into separate vectors for output. The
single vector has sizes like 4N+3 for for potential and 3 eigenvectos,
and it sends the 5 separate N vectors to exodus using the eigenvalues
as time stamps.

2.) For all Thyra problems, and almost all EpetraExt problems, there
is no Wprec.  Then the preconditioner is built within Stratimikos
based on the parameter list entries for Ifpack{2} or ML/MueLu. All of
these internal preconditioners require that W is a RowMatrix (parent
abstract class of CRS matrix). If W is just an operator, we can't do
any internal preconditioning and problems must be run without a
preconditioner or with Wprec implemented.

3.) The Teko interface in Albany was done very quickly when Teko was
new. My understanding is that it has evolved since then, and the
Albany implementation is not something we should look to or build on.
It is now accessible through Stratimikos and we should figure out how
to call it that way.

4.) Thyra should have clean ways to construct a single vector from
views of others, and a matrix from views of sub-matrices. This will
make everything much cleaner if we can figure out the syntax.  Talk to
Roger Pawlowski, Roscoe Bartless, Eric Cyr.

5.) One cannot select Ifpack2 or MueLu on its own as the preconditioner for a 
thyra block operator system.  Basically the Ifpack2 Stratimikos code expects a 
Thyra operator that wraps a Tpetra operator. Another layer of indirection and 
it will have problems. In this case you have a 1x1 DefaultBlockLinearOp wrapping 
a Thyra::TpetraLinearOp wrapping a Tpetra::Operator. This is 
already to much to handle.  Eric Cyr has written code that recurses to the “concrete” 
(meaning Epetra or Tpetra) matrix type and then uses that operator. 
This can be done, but its not clear its desirable. 
